<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>

    <!-- Loads the login UI elements-->
    <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.js"></script>
    <link
      type="text/css"
      rel="stylesheet"
      href="https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.css"
    />
  </head>
  <body>
    <script>
      const config = {
        apiKey: 'AIzaSyDdMWCVCTqF19IhdbqC-bRFIH1OODTFKOI',
        authDomain: 'itisdev.firebaseapp.com',
        projectId: 'itisdev',
        storageBucket: 'itisdev.appspot.com',
        messagingSenderId: '866191938898',
        appId: '1:866191938898:web:5816a083b06d2dacb6168b',
        measurementId: 'G-GKH7VQ8JN4',
      }

      firebase.initializeApp(config)

      // FirebaseUI config.
      const uiConfig = {
        signInOptions: [
          // Google sign in option
          firebase.auth.GoogleAuthProvider.PROVIDER_ID,
        ],
        signInFlow: 'popup',
        callbacks: {
          signInFailure(error) {
            console.log(error)
          },
          signInSuccessWithAuthResult: function (
            { user, credential },
            redirectUrl
          ) {
            user
              .getIdToken()
              .then(async function (idToken) {
                const res = await fetch('/auth/signin', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({ idToken }),
                })

                const json = await res.json()

                if (json.success) {
                  window.location.href = json.nextUrl + `?idToken=${idToken}`
                }

                return false
              })
              .catch((error) => {
                console.error(error)
              })
          },
        },
      }

      // Initialize the FirebaseUI Widget using Firebase.
      const ui = new firebaseui.auth.AuthUI(firebase.auth())

      // The start method will wait until the DOM is loaded.
      ui.start('#firebaseui-auth-container', uiConfig)
    </script>
    <div id="firebaseui-auth-container"></div>
  </body>
</html>
